searchState.loadedDescShard("dcl_crypto", 0, "This crate is a port of the original <code>@dcl/crypto</code> …\nThe type of future this transport returns when a call is …\nTransport implementation\nExecute remote method with given parameters.\nPrepare serializable RPC call for given method with …\nExecute prepared RPC call.\nA Struct that allows us to sign messages and serialize and …\nAn error that can occur when decoding a hexadecimal string\nAnd\nAlias of EIP1271Signature See …\nAn <code>EphemeralPayload</code> is a message that delegates the right …\nA trait for signing messages with an associated address.\nReturn the address of the signer.\nReturn the address of the account.\nCalculate ERC-55 version of the address\nDecodes a hex string prefixed with <code>0x</code> into raw bytes.\nDecode a hex string prefixed with <code>0x</code> into a mutable bytes …\nFormats the <code>Address</code> into its hexadecimal uppercase …\nFormat an Address into it string representation\nFormats the <code>Address</code> into its hexadecimal lowercase …\nFormat signature on its hexadecimal representation\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts <code>[u8; 20]</code> into an <code>Address</code>\nConverts an <code>H160</code> into an <code>Address</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new account using a custom RNG (Random Number …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new account generating a random private key.\nSign a message with the Address’s private key.\nSign a message with the account.\nConverts an hexadecimal representation into an Address\nCreates a new account from a private key in hex format.\nRecover the signer of the signature from a giving message\nCreates an instance of the zero address\nValidates a message and has correspond to an address.\nCreates a personal signature from a given identity and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates an authchain from a given identity and payload. …\nValidates a message and has correspond to an address.\nVerifies and authchain is valid, not expired and …\nVerifies and authchain is valid, not expired at a given …\nRepresentation of each link on an auth chain\nSee https://github.com/ethereum/EIPs/issues/1654 See …\nSee https://github.com/ethereum/EIPs/issues/1654 See …\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse a json string and returns an AuthChain\nParse a list of json strings and returns an AuthChain\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the original owner of the chain\nReturns the original owner of the chain\nAn <code>Identity</code> is an abstraction where an Account that you don…\nReturns the address of the ephemeral identity\nCreates a PersonalSignature for the given payload\nReturns the argument unchanged.\nCreates a new Identity extended from a given Identity\nCreates a new Identity from the given JSON\nCreates a new Identity from the given Signer\nCalls <code>U::from(self)</code>.\nSigns the given message with the ephemeral identity\nCreates an AuthChain signing the the given payload\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA signature validator that receives an address, a message …")