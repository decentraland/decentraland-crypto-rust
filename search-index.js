var searchIndex = JSON.parse('{\
"dcl_crypto":{"doc":"This crate is a port of the original <code>@dcl/crypto</code> …","t":"CCCCCCCQCIAAALAKKADDEDGDEDNNNNNNNNNNRDIKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMDENNNNNNNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMDENNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMDLLLLLLLLLLLLLLLLLLLLLNNNNELLLLLLLFLLLLL","n":["Account","Address","AuthChain","AuthLink","Authenticator","Expiration","Identity","Out","Signer","Web3Transport","account","authenticator","chain","execute","identity","prepare","send","util","Account","Address","DecodeHexError","EIP1271Signature","EIP1654Signature","EphemeralPayload","EphemeralPayloadError","Expiration","InvalidAddress","InvalidExpiration","InvalidHexCharacter","InvalidLength","InvalidPayload","MissingAddress","MissingExpiration","MissingPrefix","MissingTitle","OddLength","PERSONAL_SIGNATURE_SIZE","PersonalSignature","Signer","address","address","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checksum","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decode","decode_to_slice","default","default","deref","deref","deref","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","expiration","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_rng","into","into","into","into","into","into","into","into","is_expired","is_expired_at","is_valid_signature","new","new_with_title","partial_cmp","provide","provide","random","serialize","serialize","serialize","serialize","serialize","serialize","sign","sign","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_recover_from_message","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zero","c","index","err","err","value","value","Authenticator","AuthenticatorError","EmptyChain","EphemeralExpected","ExpiredEntity","SignedEntityExpected","SignedEntityMissing","SignerExpected","UnexpectedLastAuthority","UnexpectedSigner","ValidationError","WithoutTransport","add_transport","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_signature","eq","fmt","fmt","fmt","from","from","from","into","into","into","new","prepare","provide","send","sign_payload","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_personal","verify_signature","verify_signature_at","vzip","vzip","vzip","with_transport","expected","expected","found","found","found","found","found","kind","kind","message","position","position","position","position","position","position","position","AuthChain","AuthLink","EcdsaEip1654Ephemeral","EcdsaEip1654SignedEntity","EcdsaPersonalEphemeral","EcdsaPersonalSignedEntity","Signer","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deserialize","deserialize","eq","eq","fmt","fmt","from","from","from","from_json","from_json_links","into","into","is_expired","is_expired_at","kind","owner","parse","serialize","serialize","signer","simple","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","payload","payload","payload","payload","payload","signature","signature","signature","signature","signature","Identity","address","borrow","borrow_mut","clone","clone_into","create_signature","deserialize","fmt","from","from_identity","from_json","from_signer","into","serialize","sign","sign_payload","to_owned","try_from","try_into","type_id","vzip","Call","Decode","Encode","NotImplemented","RPCCallError","borrow","borrow_mut","fmt","fmt","from","into","provide","rpc_call_is_valid_signature","to_string","try_from","try_into","type_id","vzip"],"q":["dcl_crypto","","","","","","","","","","","","","","","","","","dcl_crypto::accountdcl_crypto::account::DecodeHexError","","dcl_crypto::account::EphemeralPayloadError","","","","dcl_crypto::authenticator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dcl_crypto::authenticator::AuthenticatorError","","","","","","","","","","","","","","","","","dcl_crypto::chain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dcl_crypto::chain::AuthLink","","","","","","","","","","dcl_crypto::identity","","","","","","","","","","","","","","","","","","","","","","dcl_crypto::util","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","The type of future this transport returns when a call is …","","Transport implementation","","","","Execute remote method with given parameters.","","Prepare serializable RPC call for given method with …","Execute prepared RPC call.","","A Struct that allows us to sign messages and serialize and …","","An error that can occur when decoding a hexadecimal string","And","Alias of EIP1271Signature See …","An <code>EphemeralPayload</code> is a message that delegates the right …","","","","","","","","","","","","","","","A trait for signing messages with an associated address.","Return the address of the signer.","Return the address of the account.","","","","","","","","","","","","","","","","","","Calculate ERC-55 version of the address","","","","","","","","","","","","","Decodes a hex string prefixed with <code>0x</code> into raw bytes.","Decode a hex string prefixed with <code>0x</code> into a mutable bytes …","","","","","","","","","","","","","","","","","","","","","","","","","","","Format an Address into it string representation","","Formats the <code>Address</code> into its hexadecimal lowercase …","Formats the <code>Address</code> into its hexadecimal uppercase …","Format signature on its hexadecimal representation","","","","","","","","","","","Returns the argument unchanged.","","","Converts an <code>H160</code> into an <code>Address</code>","Returns the argument unchanged.","Converts <code>[u8; 20]</code> into an <code>Address</code>","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new account using a custom RNG (Random Number …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Creates a new account generating a random private key.","","","","","","","Sign a message with the Address’s private key.","Sign a message with the account.","","","","","","","","","","","","","","","","","","Converts an hexadecimal representation into an Address","","","","","","","","","","","","","","Creates a new account from a private key in hex format.","","","","","","","","","","","Recover the signer of the signature from a giving message","","","","","","","","","","","","","","","","","Creates an instance of the zero address","","","","","","","Validates a message and has correspond to an address.","","","","","","","","","","","","","","","","","","","","","Creates a personal signature from a given identity and …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Creates an authchain from a given identity and payload. …","","","","","","","","","","","","Validates a message and has correspond to an address.","Verifies and authchain is valid, not expired and …","Verifies and authchain is valid, not expired at a given …","","","","","","","","","","","","","","","","","","","","","","","Representation of each link on an auth chain","See https://github.com/ethereum/EIPs/issues/1654 See …","See https://github.com/ethereum/EIPs/issues/1654 See …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Parse a json string and returns an AuthChain","Parse a list of json strings and returns an AuthChain","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns the original owner of the chain","","","","","Returns the original owner of the chain","","","","","","","","","","","","","","","","","","","","","An <code>Identity</code> is an abstraction where an Account that you don…","Returns the address of the ephemeral identity","","","","","Creates a PersonalSignature for the given payload","","","Returns the argument unchanged.","Creates a new Identity extended from a given Identity","Creates a new Identity from the given JSON","Creates a new Identity from the given Signer","Calls <code>U::from(self)</code>.","","Signs the given message with the ephemeral identity","Creates an AuthChain signing the the given payload","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","A signature validator that receives an address, a message …","","","","",""],"i":[0,0,0,0,0,0,0,36,0,0,0,0,0,36,0,36,36,0,0,0,0,0,0,0,0,0,19,19,15,15,19,19,19,15,19,15,0,0,0,46,8,13,15,7,10,11,12,19,13,8,15,7,10,11,12,19,13,8,7,7,10,11,12,13,8,7,10,11,12,13,8,0,0,7,10,7,10,11,12,7,10,11,12,13,8,15,7,7,7,10,11,12,19,13,8,8,13,15,15,7,7,7,7,10,10,11,11,12,12,19,19,13,13,8,15,15,15,7,7,7,10,10,10,10,11,12,12,19,13,8,8,15,7,10,11,12,19,13,8,13,13,10,13,13,12,15,19,8,7,10,11,12,13,8,46,8,13,7,10,11,12,13,8,15,7,10,11,12,19,13,15,7,7,7,10,10,10,11,11,11,12,12,12,19,13,13,13,8,8,8,15,7,10,11,12,19,13,8,10,15,7,10,11,12,19,13,8,15,7,10,11,12,19,13,8,7,47,47,48,49,48,49,0,0,38,38,38,38,38,38,38,38,38,0,35,35,38,34,35,38,34,34,34,35,38,38,38,34,35,38,34,35,38,34,35,34,38,34,35,34,38,35,38,34,35,38,34,35,38,34,35,35,35,35,38,34,35,50,51,52,53,54,50,51,55,56,55,52,53,54,55,50,51,56,0,0,41,41,41,41,41,41,40,41,40,41,40,41,40,40,41,40,41,40,41,40,41,40,40,40,40,41,40,40,40,41,40,41,41,40,41,40,41,40,41,40,41,40,41,40,41,40,57,58,59,60,61,57,58,59,60,61,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,44,44,44,44,0,44,44,44,44,44,44,44,0,44,44,44,44,44],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,[4,[2,3]]]],0,[[1,[4,[2,3]]]],[[5,6]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],7],[8,7],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,9],[7,7],[10,10],[11,11],[12,12],[13,13],[8,8],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[16,[[4,[14]],15]]]],[1,[[16,[15]]]],[[],7],[[],10],[7],[10],[11],[12],[[],[[16,[7]]]],[[],[[16,[10]]]],[[],[[16,[11]]]],[[],[[16,[12]]]],[[],[[16,[13]]]],[[],[[16,[8]]]],[[15,15],17],[[7,18],17],[[7,7],17],[[7,18],17],[[10,10],17],[[11,11],17],[[12,12],17],[[19,19],17],[[13,13],17],[[8,8],17],[[],17],0,[[15,20],21],[[15,20],21],[[7,20],21],[[7,20],21],[[7,20],21],[[7,20],21],[[10,20],21],[[10,20],21],[[11,20],21],[[11,20],21],[[12,20],21],[[12,20],21],[[19,20],21],[[19,20],21],[[13,20],21],[[13,20],21],[[8,20],21],[[]],[22,15],[23,15],[18,7],[[]],[[],7],[24,10],[[],10],[[]],[25,10],[[]],[[]],[[[27,[26]]],12],[[]],[[]],[[]],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,17],[[13,27],17],[[10,1,7],17],[[7,12],13],[[9,7,12],13],[[12,12],[[29,[28]]]],[30],[30],[[],8],[7,16],[10,16],[11,16],[12,16],[13,16],[8,16],[31,10],[[8,31],10],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],16],[9,[[16,[7]]]],[[],16],[1,[[16,[7]]]],[1,[[16,[10]]]],[9,[[16,[10]]]],[[],16],[1,[[16,[11]]]],[[],16],[9,[[16,[11]]]],[9,[[16,[12]]]],[[],16],[1,[[16,[12]]]],[[],16],[9,[[16,[13]]]],[[],16],[1,[[16,[13]]]],[1,[[16,[8]]]],[[],16],[9,[[16,[8]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[10,1],[[16,[7,32]]]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[35,[34]],36],[[35,[36]]]],[[]],[[]],[[]],[[]],[[]],[[]],[34,34],[[]],[[[35,[36]],37,[31,[1]]],10],[[38,38],17],[[38,20],21],[[38,20],21],[[34,20],21],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[35,[34]]]],[[34,1,[4,[2]]]],[30],[[34,39,6]],[[[35,[36]],37,[31,[1]]],40],[[]],[[],9],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],33],[[],33],[[],33],[[[35,[36]],7,31],[[16,[17,32]]]],[[[35,[36]],40,1],[[16,[7,38]]]],[[[35,[36]],40,1,27],[[16,[7,38]]]],[[]],[[]],[[]],[36,[[35,[36]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[41,41],[40,40],[[]],[[]],[40],[[],[[16,[41]]]],[[],[[16,[40]]]],[[41,41],17],[[40,40],17],[[41,20],21],[[40,20],21],[[]],[[]],[[[4,[41]]],40],[[],[[16,[40,42]]]],[[[4,[1]]],[[16,[40,42]]]],[[]],[[]],[40,17],[[40,27],17],[41,1],[40,[[29,[7]]]],[1,[[16,[41,42]]]],[41,16],[40,16],[7,41],[7,[[16,[40,15]]]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],33],[[],33],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[37,7],[[]],[[]],[37,37],[[]],[[37,[31,[1]]],10],[[],[[16,[37]]]],[[37,20],21],[[]],[[37,[43,[12]]],37],[[[31,[1]]],[[16,[37,42]]]],[[[43,[12]]],37],[[]],[37,16],[[37,31],10],[[37,[31,[1]]],40],[[]],[[],16],[[],16],[[],33],[[]],0,0,0,0,0,[[]],[[]],[[44,20],21],[[44,20],21],[[]],[[]],[30],[[45,7,9,[4,[14]]],[[16,[17,44]]]],[[],9],[[],16],[[],16],[[],33],[[]]],"p":[[15,"str"],[4,"Value"],[3,"Global"],[3,"Vec"],[15,"usize"],[4,"Call"],[3,"Address"],[3,"Account"],[3,"String"],[3,"PersonalSignature"],[3,"EIP1271Signature"],[3,"Expiration"],[3,"EphemeralPayload"],[15,"u8"],[4,"DecodeHexError"],[4,"Result"],[15,"bool"],[3,"H160"],[4,"EphemeralPayloadError"],[3,"Formatter"],[6,"Result"],[4,"FromHexError"],[4,"Error"],[3,"RecoverableSignature"],[3,"Signature"],[8,"TimeZone"],[3,"DateTime"],[4,"Ordering"],[4,"Option"],[3,"Demand"],[8,"AsRef"],[4,"RecoveryError"],[3,"TypeId"],[3,"WithoutTransport"],[3,"Authenticator"],[8,"Web3Transport"],[3,"Identity"],[4,"AuthenticatorError"],[6,"RequestId"],[3,"AuthChain"],[4,"AuthLink"],[3,"Error"],[8,"Into"],[4,"RPCCallError"],[3,"Eth"],[8,"Signer"],[13,"InvalidHexCharacter"],[13,"InvalidAddress"],[13,"InvalidExpiration"],[13,"UnexpectedSigner"],[13,"UnexpectedLastAuthority"],[13,"SignerExpected"],[13,"EphemeralExpected"],[13,"SignedEntityExpected"],[13,"ValidationError"],[13,"ExpiredEntity"],[13,"Signer"],[13,"EcdsaPersonalEphemeral"],[13,"EcdsaPersonalSignedEntity"],[13,"EcdsaEip1654Ephemeral"],[13,"EcdsaEip1654SignedEntity"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
