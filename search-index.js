var searchIndex = JSON.parse('{\
"dcl_crypto":{"doc":"This crate is a port of the original <code>@dcl/crypto</code> …","t":"CCCCAAAADEDGDENNNNNNNNNNRDMLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMDENNNNNNNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMDENNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMNNNNELLLLLLLFLLLLL","n":["Address","AuthChain","AuthLink","Authenticator","account","authenticator","chain","rpc","Address","DecodeHexError","EIP1271Signature","EIP1654Signature","EphemeralPayload","EphemeralPayloadError","InvalidAddress","InvalidExpiration","InvalidHexCharacter","InvalidLength","InvalidPayload","MissingAddress","MissingExpiration","MissingPrefix","MissingTitle","OddLength","PERSONAL_SIGNATURE_SIZE","PersonalSignature","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checksum","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","decode","decode_to_slice","default","default","deref","deref","deref","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","expiration","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","is_expired","is_expired_at","is_valid_signature","new","new_with_title","provide","provide","serialize","serialize","serialize","serialize","title","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_recover_from_message","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","zero","c","index","err","err","value","value","Authenticator","AuthenticatorError","EmptyChain","EphemeralExpected","ExpiredEntity","SignedEntityExpected","SignedEntityMissing","SignerExpected","UnexpectedLastAuthority","UnexpectedSigner","ValidationError","WithoutTransport","add_transport","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","fmt","fmt","from","from","from","into","into","into","new","prepare","provide","send","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_personal","verify_signature","verify_signature_at","vzip","vzip","vzip","with_transport","expected","expected","found","found","found","found","found","kind","kind","message","position","position","position","position","position","position","position","AuthChain","AuthLink","EcdsaEip1654Ephemeral","EcdsaEip1654SignedEntity","EcdsaPersonalEphemeral","EcdsaPersonalSignedEntity","Signer","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deserialize","deserialize","eq","eq","fmt","fmt","from","from","from","from_json","from_json_links","into","into","is_expired","is_expired_at","kind","owner","parse","serialize","serialize","signer","simple","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","payload","payload","payload","payload","payload","signature","signature","signature","signature","signature","Call","Decode","Encode","NotImplemented","RPCCallError","borrow","borrow_mut","fmt","fmt","from","into","provide","rpc_call_is_valid_signature","to_string","try_from","try_into","type_id","vzip"],"q":["dcl_crypto","","","","","","","","dcl_crypto::account","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dcl_crypto::account::DecodeHexError","","dcl_crypto::account::EphemeralPayloadError","","","","dcl_crypto::authenticator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dcl_crypto::authenticator::AuthenticatorError","","","","","","","","","","","","","","","","","dcl_crypto::chain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dcl_crypto::chain::AuthLink","","","","","","","","","","dcl_crypto::rpc","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","An error that can occur when decoding a hexadecimal string","And","Alias of EIP1271Signature See …","An <code>EphemeralPayload</code> is a message that delegates the right …","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculate ERC-55 version of the address","","","","","","","","","Decodes a hex string prefixed with <code>0x</code> into raw bytes.","Decode a hex string prefixed with <code>0x</code> into a mutable bytes …","","","","","","","","","","","","","","","","","","","","","Format an Address into it string representation","Formats the <code>Address</code> into its hexadecimal uppercase …","Formats the <code>Address</code> into its hexadecimal lowercase …","","","Format signature on its hexadecimal representation","","","","","","","","Returns the argument unchanged.","Converts an <code>H160</code> into an <code>Address</code>","Converts <code>[u8; 20]</code> into an <code>Address</code>","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Converts an hexadecimal representation into an Address","","","","","","","","","","","","","","","","","Recover the signer of the signature from a giving message","","","","","","","","","","","","","Creates an instance of the zero address","","","","","","","Validates a message and has correspond to an address.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Validates a message and has correspond to an address.","Verifies and authchain is valid, not expired and …","Verifies and authchain is valid, not expired at a given …","","","","","","","","","","","","","","","","","","","","","","","Representation of each link on an auth chain","See https://github.com/ethereum/EIPs/issues/1654 See …","See https://github.com/ethereum/EIPs/issues/1654 See …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Parse a json string and returns an AuthChain","Parse a list of json strings and returns an AuthChain","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns the original owner of the chain","","","","","Returns the original owner of the chain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","A signature validator that receives an address, a message …","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,9,9,13,13,13,9,13,9,0,0,5,9,1,3,4,5,13,9,1,3,4,5,13,1,1,3,4,5,1,3,4,5,0,0,1,3,1,3,4,1,3,4,5,9,1,1,1,3,4,5,13,5,9,9,1,1,1,1,3,3,4,4,5,5,13,13,9,9,1,1,1,3,3,3,4,5,13,9,1,3,4,5,13,5,5,3,5,5,9,13,1,3,4,5,5,1,3,4,5,9,1,3,4,5,13,9,1,1,1,3,3,3,4,4,4,5,5,5,13,9,1,3,4,5,13,3,9,1,3,4,5,13,9,1,3,4,5,13,1,37,37,38,39,38,39,0,0,26,26,26,26,26,26,26,26,26,0,24,24,26,23,24,26,23,23,23,26,26,26,23,24,26,23,24,26,23,24,23,26,23,23,26,24,26,23,24,26,23,24,26,23,24,24,24,24,26,23,24,40,41,42,43,44,40,41,45,46,45,42,43,44,45,40,41,46,0,0,32,32,32,32,32,32,31,32,31,32,31,32,31,31,32,31,32,31,32,31,32,31,31,31,31,32,31,31,31,32,31,32,32,31,32,31,32,31,32,31,32,31,32,31,32,31,47,48,49,50,51,47,48,49,50,51,35,35,35,35,0,35,35,35,35,35,35,35,0,35,35,35,35,35],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[1,1],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],[6,[[10,[[8,[7]],9]]]],[6,[[10,[9]]]],[[],1],[[],3],[1],[3],[4],[[],[[10,[1]]]],[[],[[10,[3]]]],[[],[[10,[4]]]],[[],[[10,[5]]]],[[9,9],11],[[1,12],11],[[1,1],11],[[1,12],11],[[3,3],11],[[4,4],11],[[5,5],11],[[13,13],11],0,[[9,14],15],[[9,14],15],[[1,14],15],[[1,14],15],[[1,14],15],[[1,14],15],[[3,14],15],[[3,14],15],[[4,14],15],[[4,14],15],[[5,14],15],[[5,14],15],[[13,14],15],[[13,14],15],[16,9],[[]],[12,1],[[],1],[[]],[[]],[17,3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,11],[[5,18],11],[[3,6,1],11],[[1,[18,[19]]],5],[[2,1,[18,[19]]],5],[20],[20],[1,10],[3,10],[4,10],[5,10],0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[2,[[10,[1]]]],[6,[[10,[1]]]],[6,[[10,[3]]]],[2,[[10,[3]]]],[[],10],[6,[[10,[4]]]],[[],10],[2,[[10,[4]]]],[2,[[10,[5]]]],[6,[[10,[5]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[3,6],[[10,[1,21]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[24,[23]],25],[[24,[25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[23,23],[[]],[[26,26],11],[[26,14],15],[[26,14],15],[[23,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[24,[23]]]],[[23,6,[8,[27]]]],[20],[[23,28,29]],[[]],[[],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],22],[[],22],[[],22],[[[24,[25]],1,30],[[10,[11,21]]]],[[[24,[25]],31,6],[[10,[1,26]]]],[[[24,[25]],31,6,18],[[10,[1,26]]]],[[]],[[]],[[]],[25,[[24,[25]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[32,32],[31,31],[[]],[[]],[31],[[],[[10,[32]]]],[[],[[10,[31]]]],[[32,32],11],[[31,31],11],[[32,14],15],[[31,14],15],[[]],[[[8,[32]]],31],[[]],[[],[[10,[31,33]]]],[[[8,[6]]],[[10,[31,33]]]],[[]],[[]],[31,11],[[31,18],11],[32,6],[31,[[34,[1]]]],[6,[[10,[32,33]]]],[32,10],[31,10],[1,32],[1,[[10,[31,9]]]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],22],[[],22],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[35,14],15],[[35,14],15],[[]],[[]],[20],[[36,1,2,[8,[7]]],[[10,[11,35]]]],[[],2],[[],10],[[],10],[[],22],[[]]],"p":[[3,"Address"],[3,"String"],[3,"PersonalSignature"],[3,"EIP1271Signature"],[3,"EphemeralPayload"],[15,"str"],[15,"u8"],[3,"Vec"],[4,"DecodeHexError"],[4,"Result"],[15,"bool"],[3,"H160"],[4,"EphemeralPayloadError"],[3,"Formatter"],[6,"Result"],[4,"FromHexError"],[3,"Signature"],[3,"DateTime"],[3,"Utc"],[3,"Demand"],[4,"RecoveryError"],[3,"TypeId"],[3,"WithoutTransport"],[3,"Authenticator"],[8,"Transport"],[4,"AuthenticatorError"],[4,"Value"],[6,"RequestId"],[4,"Call"],[8,"AsRef"],[3,"AuthChain"],[4,"AuthLink"],[3,"Error"],[4,"Option"],[4,"RPCCallError"],[3,"Eth"],[13,"InvalidHexCharacter"],[13,"InvalidAddress"],[13,"InvalidExpiration"],[13,"UnexpectedSigner"],[13,"UnexpectedLastAuthority"],[13,"SignerExpected"],[13,"EphemeralExpected"],[13,"SignedEntityExpected"],[13,"ValidationError"],[13,"ExpiredEntity"],[13,"Signer"],[13,"EcdsaPersonalEphemeral"],[13,"EcdsaPersonalSignedEntity"],[13,"EcdsaEip1654Ephemeral"],[13,"EcdsaEip1654SignedEntity"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
